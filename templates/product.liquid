{% section 'product-template' %}
{% section 'single-product-tab' %}
{% section 'related-product' %}
{% section 'upsell-product' %}




{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    
    if (variant) {
          $('.variant-sku').text(variant.sku);
        }
        else {
          $('.variant-sku').empty();
        }
    
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>

{% if product.variants.size > 1 %}

<script>

(function($) { 

 var variantImages = {},

 thumbnails,

 variant,

 variantImage,

 optionValue;

 {% for variant in product.variants %}

 variant = {{ variant | json }};

 if ( typeof variant.featured_image !== 'undefined' && variant.featured_image !== null ) {

 variantImage = variant.featured_image.src.split('?')[0].replace(/http(s)?:/,'');

 variantImages[variantImage] = variantImages[variantImage] || {};

 {% for option in product.options %}

 {% assign option_value = variant.options[forloop.index0] %}

 {% assign option_key = 'option-' | append: forloop.index0 %}

 if (typeof variantImages[variantImage][{{ option_key | json }}] === 'undefined') {

 variantImages[variantImage][{{ option_key | json }}] = {{ option_value | json }};

 }

 else {

 var oldValue = variantImages[variantImage][{{ option_key | json }}];

 if ( oldValue !== null && oldValue !== {{ option_value | json }} ) {

 variantImages[variantImage][{{ option_key | json }}] = null;

 }

 }

 {% endfor %}

 }

 {% endfor %}

 $(function() {

 thumbnails = $('img[src*="/products/"]').not(':first');

 if (thumbnails.size()) {

 thumbnails.bind('click', function() {

 var image = $(this).attr('src').split('?')[0].replace(/(_thumb\.)|(_small\.)|(_compact\.)|(_medium\.)|(_large\.)|(_grande\.)/,'.');

 if (typeof variantImages[image] !== 'undefined') {

 {% for option in product.options %}

 optionValue = variantImages[image]['option-{{ forloop.index0 }}'];

 if (optionValue !== null && $('.single-option-selector:eq({{ forloop.index0 }}) option').filter(function() { return $(this).text() === optionValue }).length) {

 $('.single-option-selector:eq({{ forloop.index0 }})').val(optionValue).trigger('change');

 }

 {% endfor %}

 }

 });

 }

 });

})(jQuery);

</script> 

{% endif %}